import{aH as r}from"./index-DgNM5EQL.js";let o=null,i=0;const l=5,f=(t,c,a)=>o&&o.readyState===WebSocket.OPEN?(console.warn("Notification WebSocket already connected."),o):(o=new WebSocket(`ws://localhost:8000/ws/notifications/${c}/?token=${t}`),o.onopen=()=>{console.log("Notification WebSocket connection established."),i=0},o.onmessage=n=>{try{const e=JSON.parse(n.data);if(console.log("WebSocket message:",e),e.notification){const s={id:e.notification.id,message:e.notification.message,is_read:e.notification.is_read,user:e.notification.user_id,notification_type:e.notification.notification_type,created_at:e.notification.timestamp};a(r(s)),console.log("Dispatched notification:",s)}}catch(e){console.error("Failed to parse notification WebSocket message:",e)}},o.onerror=n=>{console.error("Notification WebSocket error:",n)},o.onclose=n=>{console.log("Notification WebSocket connection closed:",n),i<l?setTimeout(()=>{i++,console.log(`Reconnection attempt ${i}...`),f(t,c,a)},5e3):console.error("Max reconnect attempts reached. Could not reconnect.")},o),S=t=>{o&&o.readyState===WebSocket.OPEN?(o.send(JSON.stringify(t)),console.log("Sent notification:",t)):console.warn("Notification WebSocket is not connected.")},b=()=>{o&&(o.close(),o=null,console.log("Notification WebSocket connection closed."))};export{b as a,f as c,S as s};
